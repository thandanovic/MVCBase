@model MVCBase.Entities.Order

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="col-lg-8 col-lg-offset-2 margin-top-10 clearfix">
        <div class="well clearfix">
            <div class="form-horizontal">
                <div class="col-lg-6"><h4>Order</h4></div>
                <div class="col-lg-6 clearfix">
                   
                        <div class="col-md-offset-4 col-md-7">
                            @Html.ActionLink("<<< Back to List", "Index", "", new { @class = "btn btn-info pull-right margin-bottom-10" })
                        </div>
                    
                </div>
                <div class="col-lg-12 clearfix">
                    <hr class="style-one" />
                </div>
               
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.OrderId)

                <div class="form-group">
                    @Html.LabelFor(model => model.UserInfoId, "User", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.DropDownList("UserInfoId", null, htmlAttributes: new { disabled = "disabled", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserInfoId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LocationId, "Location", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.DropDownList("LocationId", null, htmlAttributes: new { disabled = "disabled", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ContainerId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.ContainerId, new { htmlAttributes = new { disabled = "disabled", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContainerId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedOn,"Created", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { disabled = "disabled", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Deadline, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Deadline, new { htmlAttributes = new { disabled = "disabled", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Deadline, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TotalPrice, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.TotalPrice, new { htmlAttributes = new { disabled = "disabled", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PaymentStatus, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @*@Html.EditorFor(model => model.PaymentStatus, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.PaymentStatus, new List<SelectListItem>
                                            {
                                            new SelectListItem{ Text="Select Status", Value = "" },
                                            new SelectListItem{ Text="Paid", Value = "Paid" },
                                            new SelectListItem{ Text="Not Paid", Value = "Not Paid" },
                                            new SelectListItem{ Text="Free", Value = "Free" }

                                            },  new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.PaymentStatus, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OrderStatus, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                       @* @Html.EditorFor(model => model.OrderStatus, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.OrderStatus, new List<SelectListItem>
                                            {
                                            new SelectListItem{ Text="Select Status", Value = "" },
                                            new SelectListItem{ Text="Pending", Value = "Pending" },
                                            new SelectListItem{ Text="In Process", Value = "InProcess" },
                                            new SelectListItem{ Text="Completed", Value = "Completed" },
                                            new SelectListItem{ Text="Rejected", Value = "Rejected" }
                                            }, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OrderStatus, "", new { @class = "text-danger" })
                    </div>
                </div>

                

                

                

                <div class="form-group">
                    @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>
                </div>



                

                <div class="form-group">
                    <div class="col-md-offset-4 col-md-7">
                        <input type="submit" value="Save" class="btn btn-success pull-right margin-bottom-10" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div class="clearfix"></div>
